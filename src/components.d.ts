/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AtomicDistanceResources {
        /**
          * The default latitude value to be used if no other location is provided.
         */
        "defaultLatitude": number;
        /**
          * The default longitude value to be used if no other location is provided.
         */
        "defaultLongitude": number;
        /**
          * Specifies the name of the field in which to store the distance value.
         */
        "distanceField": string;
        /**
          * The array of geospatial distances, as a string (e.g., `"[25, 50, 100]"`), which will be parsed and converted into options for the distance dropdown.
         */
        "geospatialDistances": string[] | string;
        /**
          * A valid Google API key to be used for geocoding a city or postal code.
         */
        "googleApiKey": string;
        /**
          * Specifies the name of the field that contains the latitude value.
         */
        "latitudeField": string;
        /**
          * Specifies the name of the field that contains the longitude value.
         */
        "longitudeField": string;
        /**
          * Whether to request the geolocation service of the web browser. If not defined, will not try to request the service. Defaults to `true`.
         */
        "useNavigator": boolean;
    }
}
declare global {
    interface HTMLAtomicDistanceResourcesElement extends Components.AtomicDistanceResources, HTMLStencilElement {
    }
    var HTMLAtomicDistanceResourcesElement: {
        prototype: HTMLAtomicDistanceResourcesElement;
        new (): HTMLAtomicDistanceResourcesElement;
    };
    interface HTMLElementTagNameMap {
        "atomic-distance-resources": HTMLAtomicDistanceResourcesElement;
    }
}
declare namespace LocalJSX {
    interface AtomicDistanceResources {
        /**
          * The default latitude value to be used if no other location is provided.
         */
        "defaultLatitude"?: number;
        /**
          * The default longitude value to be used if no other location is provided.
         */
        "defaultLongitude"?: number;
        /**
          * Specifies the name of the field in which to store the distance value.
         */
        "distanceField": string;
        /**
          * The array of geospatial distances, as a string (e.g., `"[25, 50, 100]"`), which will be parsed and converted into options for the distance dropdown.
         */
        "geospatialDistances": string[] | string;
        /**
          * A valid Google API key to be used for geocoding a city or postal code.
         */
        "googleApiKey": string;
        /**
          * Specifies the name of the field that contains the latitude value.
         */
        "latitudeField": string;
        /**
          * Specifies the name of the field that contains the longitude value.
         */
        "longitudeField": string;
        /**
          * Whether to request the geolocation service of the web browser. If not defined, will not try to request the service. Defaults to `true`.
         */
        "useNavigator"?: boolean;
    }
    interface IntrinsicElements {
        "atomic-distance-resources": AtomicDistanceResources;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "atomic-distance-resources": LocalJSX.AtomicDistanceResources & JSXBase.HTMLAttributes<HTMLAtomicDistanceResourcesElement>;
        }
    }
}
